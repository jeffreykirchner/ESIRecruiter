# Generated by Django 3.0.7 on 2020-09-22 19:54

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    replaces = [('main', '0001_initial'), ('main', '0002_auto_20200606_1858'), ('main', '0003_auto_20200606_2044'), ('main', '0004_auto_20200606_2105'), ('main', '0005_auto_20200606_2127'), ('main', '0006_profile_gradstudent'), ('main', '0007_profile_phone'), ('main', '0008_profile_studentworker'), ('main', '0009_auto_20200607_2159'), ('main', '0010_auto_20200607_2212'), ('main', '0011_auto_20200608_1746'), ('main', '0012_auto_20200610_2138'), ('main', '0013_auto_20200610_2229'), ('main', '0014_auto_20200612_2215'), ('main', '0015_auto_20200616_2251'), ('main', '0016_auto_20200616_2312'), ('main', '0017_auto_20200617_1700'), ('main', '0018_auto_20200619_0117'), ('main', '0019_auto_20200624_1925'), ('main', '0020_auto_20200624_2135'), ('main', '0021_auto_20200624_2136'), ('main', '0022_auto_20200630_0005'), ('main', '0023_experiment_sessions_allow_multiple_participatoins'), ('main', '0024_auto_20200702_1707'), ('main', '0025_experiment_sessions_experience_constraint'), ('main', '0026_auto_20200706_1809'), ('main', '0027_auto_20200708_2030'), ('main', '0028_hrefexperiments_parameters'), ('main', '0029_auto_20200715_2024'), ('main', '0030_parameters_labmanager'), ('main', '0031_experiments_showupfee'), ('main', '0032_experiment_sessions_showupfee_legacy'), ('main', '0033_auto_20200717_1631'), ('main', '0034_auto_20200717_1712'), ('main', '0035_auto_20200720_1603'), ('main', '0036_auto_20200720_1611'), ('main', '0037_auto_20200720_1624'), ('main', '0038_auto_20200721_1710'), ('main', '0039_experiments_invitationtext'), ('main', '0040_parameters_cancelationtext'), ('main', '0041_auto_20200724_1740'), ('main', '0042_auto_20200724_1755'), ('main', '0043_auto_20200728_1805'), ('main', '0044_experiment_session_messages'), ('main', '0045_auto_20200729_1751'), ('main', '0046_auto_20200729_2003'), ('main', '0047_experiment_session_invitations'), ('main', '0048_recruitmentparameters'), ('main', '0049_auto_20200731_2024'), ('main', '0050_auto_20200731_2036'), ('main', '0051_experiment_session_days_complete'), ('main', '0052_auto_20200811_1825'), ('main', '0053_auto_20200811_1854'), ('main', '0054_auto_20200811_1905'), ('main', '0055_auto_20200812_1658'), ('main', '0056_auto_20200812_1728'), ('main', '0057_auto_20200814_2304'), ('main', '0058_auto_20200815_1858'), ('main', '0059_auto_20200822_1947'), ('main', '0060_auto_20200822_1958'), ('main', '0061_auto_20200822_2026'), ('main', '0062_remove_emailfilter_name'), ('main', '0063_emailfilter_name'), ('main', '0064_auto_20200822_2139'), ('main', '0065_auto_20200823_1738'), ('main', '0066_auto_20200823_1741'), ('main', '0067_auto_20200825_1817'), ('main', '0068_auto_20200825_2027'), ('main', '0069_profile_note'), ('main', '0070_auto_20200826_2321'), ('main', '0071_auto_20200828_1459'), ('main', '0072_auto_20200828_1510'), ('main', '0073_profile_paused'), ('main', '0074_auto_20200903_1728'), ('main', '0075_auto_20200906_2007'), ('main', '0076_parameters_maxannualearnings'), ('main', '0077_auto_20200907_0042'), ('main', '0078_experiment_session_days_date_end'), ('main', '0079_experiment_session_day_users_addedbyuser'), ('main', '0080_experiment_session_day_users_manuallyadded'), ('main', '0081_genders_intialvalue'), ('main', '0082_auto_20200917_0000'), ('main', '0083_auto_20200917_0002'), ('main', '0084_auto_20200917_0304'), ('main', '0085_auto_20200917_0308'), ('main', '0086_auto_20200917_0317'), ('main', '0087_auto_20200917_0327'), ('main', '0088_experiments_remindertext'), ('main', '0089_auto_20200917_2024'), ('main', '0090_parameters_siteurl'), ('main', '0091_auto_20200918_2326'), ('main', '0092_auto_20200919_0243'), ('main', '0093_auto_20200919_0401'), ('main', '0094_auto_20200919_0415'), ('main', '0095_auto_20200919_0430'), ('main', '0096_auto_20200919_0438'), ('main', '0097_auto_20200919_2257'), ('main', '0098_auto_20200919_2306'), ('main', '0099_auto_20200919_2356'), ('main', '0100_auto_20200920_0439'), ('main', '0101_auto_20200922_1920'), ('main', '0102_auto_20200922_1928')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='accounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=300)),
                ('number', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='accountTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Account Type',
                'verbose_name_plural': 'Account Types',
            },
        ),
        migrations.CreateModel(
            name='departments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('charge_account', models.CharField(max_length=100)),
                ('petty_cash', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='experience_levels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Experience Levels',
                'verbose_name_plural': 'Experience Levels',
            },
        ),
        migrations.CreateModel(
            name='experiments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('experiment_manager', models.CharField(max_length=300)),
                ('registration_cutoff_default', models.IntegerField()),
                ('actual_participants_default', models.IntegerField()),
                ('length_default', models.IntegerField()),
                ('notes', models.TextField(null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('account_default', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.accounts')),
                ('experience_level_default', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.experience_levels')),
                ('experiments_exclude_default', models.ManyToManyField(blank=True, related_name='_experiments_experiments_exclude_default_+', to='main.experiments')),
                ('experiments_include_default', models.ManyToManyField(blank=True, related_name='_experiments_experiments_include_default_+', to='main.experiments')),
            ],
        ),
        migrations.CreateModel(
            name='genders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Gender',
                'verbose_name_plural': 'Genders',
            },
        ),
        migrations.CreateModel(
            name='institutions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Institution',
                'verbose_name_plural': 'Institutions',
            },
        ),
        migrations.CreateModel(
            name='locations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('address', models.TextField(null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='majors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Major',
                'verbose_name_plural': 'Majors',
            },
        ),
        migrations.CreateModel(
            name='schools',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools',
            },
        ),
        migrations.CreateModel(
            name='subject_types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subject Type',
                'verbose_name_plural': 'Subject Types',
            },
        ),
        migrations.CreateModel(
            name='experiments_institutions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.experiments')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.institutions')),
            ],
        ),
        migrations.AddField(
            model_name='experiments',
            name='gender_default',
            field=models.ManyToManyField(to='main.genders'),
        ),
        migrations.AddField(
            model_name='experiments',
            name='institution',
            field=models.ManyToManyField(through='main.experiments_institutions', to='main.institutions'),
        ),
        migrations.AddField(
            model_name='experiments',
            name='institutions_exclude_default',
            field=models.ManyToManyField(blank=True, related_name='experiments_institutions_exclude_default', to='main.institutions'),
        ),
        migrations.AddField(
            model_name='experiments',
            name='institutions_include_default',
            field=models.ManyToManyField(blank=True, related_name='experiments_institutions_include_default', to='main.institutions'),
        ),
        migrations.AddField(
            model_name='experiments',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.schools'),
        ),
        migrations.AddField(
            model_name='experiments',
            name='subject_type_default',
            field=models.ManyToManyField(to='main.subject_types'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.departments'),
        ),
        migrations.AlterModelOptions(
            name='accounts',
            options={'verbose_name': 'Account', 'verbose_name_plural': 'Accounts'},
        ),
        migrations.AlterModelOptions(
            name='experiments',
            options={'verbose_name': 'Experiment', 'verbose_name_plural': 'Experiments'},
        ),
        migrations.CreateModel(
            name='experiment_sessions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ES', to='main.experiments')),
                ('experiments_exclude', models.ManyToManyField(blank=True, related_name='experiment_sessions_experiments_exclude', to='main.experiments')),
                ('experiments_include', models.ManyToManyField(blank=True, related_name='experiment_sessions_experiments_include', to='main.experiments')),
                ('gender', models.ManyToManyField(to='main.genders')),
                ('institutions_exclude', models.ManyToManyField(blank=True, related_name='experiment_sessions_institutions_exclude', to='main.institutions')),
                ('institutions_include', models.ManyToManyField(blank=True, related_name='experiment_sessions_institutions_include', to='main.institutions')),
                ('subject_type', models.ManyToManyField(to='main.subject_types')),
                ('actual_participants', models.IntegerField(default=1)),
                ('registration_cutoff', models.IntegerField(default=1)),
                ('experience_max', models.IntegerField(default=1000)),
                ('experience_min', models.IntegerField(default=0)),
                ('experiments_exclude_all', models.BooleanField(default=True)),
                ('experiments_include_all', models.BooleanField(default=True)),
                ('institutions_exclude_all', models.BooleanField(default=True)),
                ('institutions_include_all', models.BooleanField(default=True)),
                ('allow_multiple_participations', models.BooleanField(default=False)),
                ('experience_constraint', models.BooleanField(default=False)),
                ('showUpFee_legacy', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
            ],
            options={
                'verbose_name': 'Experiment Sessions',
                'verbose_name_plural': 'Experiment Sessions',
            },
        ),
        migrations.CreateModel(
            name='experiment_session_days',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('length', models.IntegerField(default=60)),
                ('auto_reminder', models.SmallIntegerField(default=1)),
                ('canceled', models.SmallIntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.accounts')),
                ('experiment_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ESD', to='main.experiment_sessions')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.locations')),
            ],
            options={
                'verbose_name': 'Experiment Session Days',
                'verbose_name_plural': 'Experiment Session Days',
            },
        ),
        migrations.CreateModel(
            name='experiment_session_day_users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attended', models.BooleanField(default=False)),
                ('bumped', models.BooleanField(default=False)),
                ('confirmed', models.BooleanField(default=False)),
                ('confirmationHash', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('show_up_fee', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('earnings', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('multi_day_legacy', models.BooleanField(default=False, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('experiment_session_day', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.experiment_session_days')),
                ('experiment_session_legacy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.experiment_sessions')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ESDU', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Experiment Session Day Users',
                'verbose_name_plural': 'Experiment Session Day Users',
            },
        ),
        migrations.CreateModel(
            name='profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapmanID', models.CharField(default='00000000', max_length=100)),
                ('emailConfirmed', models.CharField(default='no', max_length=100)),
                ('blackballed', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('gender', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.genders')),
                ('major', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.majors')),
                ('school', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.schools')),
                ('type', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='main.accountTypes')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('phone', models.CharField(default='', max_length=100)),
                ('studentWorker', models.BooleanField(default=False)),
                ('subjectType', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.subject_types')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='experience_level_default',
        ),
        migrations.DeleteModel(
            name='experience_levels',
        ),
        migrations.AddField(
            model_name='experiments',
            name='experience_max_default',
            field=models.IntegerField(default=1000),
        ),
        migrations.AddField(
            model_name='experiments',
            name='experience_min_default',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='experiments',
            name='allow_multiple_participations_default',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='experiments',
            name='experience_constraint_default',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='experiments',
            name='experiments_exclude_all_default',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='experiments',
            name='experiments_include_all_default',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='experiments',
            name='institutions_exclude_all_default',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='experiments',
            name='institutions_include_all_default',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='hrefExperiments',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.experiments',),
        ),
        migrations.CreateModel(
            name='parameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invitationText', models.CharField(max_length=10000)),
                ('consentForm', models.CharField(max_length=50000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('labManager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Parameters',
                'verbose_name_plural': 'Parameters',
            },
        ),
        migrations.AddField(
            model_name='experiments',
            name='showUpFee',
            field=models.DecimalField(decimal_places=6, default=0, max_digits=10),
        ),
        migrations.AddConstraint(
            model_name='experiment_session_day_users',
            constraint=models.UniqueConstraint(fields=('user', 'experiment_session_day'), name='unique_ESDU'),
        ),
        migrations.AddField(
            model_name='parameters',
            name='subjectTimeZone',
            field=models.CharField(default='US/Pacific', max_length=1000),
        ),
        migrations.AddField(
            model_name='parameters',
            name='defaultShowUpFee',
            field=models.DecimalField(decimal_places=2, default=7, max_digits=5),
        ),
        migrations.AddField(
            model_name='parameters',
            name='invitationTextMultiDay',
            field=models.CharField(default='', max_length=10000),
        ),
        migrations.AlterField(
            model_name='parameters',
            name='consentForm',
            field=models.CharField(default='', max_length=50000),
        ),
        migrations.AlterField(
            model_name='parameters',
            name='invitationText',
            field=models.CharField(default='', max_length=10000),
        ),
        migrations.AddField(
            model_name='experiments',
            name='invitationText',
            field=models.CharField(default='', max_length=10000),
        ),
        migrations.AddField(
            model_name='parameters',
            name='cancelationText',
            field=models.CharField(default='', max_length=10000),
        ),
        migrations.RemoveField(
            model_name='experiment_session_days',
            name='canceled',
        ),
        migrations.AddField(
            model_name='experiment_sessions',
            name='canceled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='parameters',
            name='cancelationTextSubject',
            field=models.CharField(default='', max_length=1000),
        ),
        migrations.AddField(
            model_name='parameters',
            name='invitationTextMultiDaySubject',
            field=models.CharField(default='', max_length=1000),
        ),
        migrations.AddField(
            model_name='parameters',
            name='invitationTextSubject',
            field=models.CharField(default='', max_length=1000),
        ),
        migrations.CreateModel(
            name='experiment_session_messages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjectText', models.CharField(default='', max_length=1000)),
                ('messageText', models.CharField(default='', max_length=10000)),
                ('experiment_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.experiment_sessions')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('mailResultErrorText', models.CharField(default='', max_length=10000)),
                ('mailResultSentCount', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Experiment Session Messages',
                'verbose_name_plural': 'Experiment Session Messages',
            },
        ),
        migrations.CreateModel(
            name='recruitmentParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_participants', models.IntegerField(default=1, null=True)),
                ('registration_cutoff', models.IntegerField(default=1, null=True)),
                ('experience_min', models.IntegerField(default=0, null=True)),
                ('experience_max', models.IntegerField(default=1000, null=True)),
                ('experience_constraint', models.BooleanField(default=False, null=True)),
                ('institutions_exclude_all', models.BooleanField(default=True, null=True)),
                ('institutions_include_all', models.BooleanField(default=True, null=True)),
                ('experiments_exclude_all', models.BooleanField(default=True, null=True)),
                ('experiments_include_all', models.BooleanField(default=True, null=True)),
                ('allow_multiple_participations', models.BooleanField(default=False, null=True)),
                ('experiments_exclude', models.ManyToManyField(blank=True, related_name='recruitmentparameters_experiments_exclude', to='main.experiments')),
                ('experiments_include', models.ManyToManyField(blank=True, related_name='recruitmentparameters_experiments_include', to='main.experiments')),
                ('gender', models.ManyToManyField(to='main.genders')),
                ('institutions_exclude', models.ManyToManyField(blank=True, related_name='recruitmentparameters_institutions_exclude', to='main.institutions')),
                ('institutions_include', models.ManyToManyField(blank=True, related_name='recruitmentparameters_institutions_include', to='main.institutions')),
                ('subject_type', models.ManyToManyField(to='main.subject_types')),
                ('timestamp', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Recruitment Parameters',
                'verbose_name_plural': 'Recruitment Parameters',
            },
        ),
        migrations.AddField(
            model_name='experiment_session_days',
            name='complete',
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='actual_participants_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='allow_multiple_participations_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='experience_constraint_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='experience_max_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='experience_min_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='experiments_exclude_all_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='experiments_exclude_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='experiments_include_all_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='experiments_include_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='gender_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='institutions_exclude_all_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='institutions_exclude_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='institutions_include_all_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='institutions_include_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='registration_cutoff_default',
        ),
        migrations.RemoveField(
            model_name='experiments',
            name='subject_type_default',
        ),
        migrations.AddField(
            model_name='experiments',
            name='recruitment_params_default',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.recruitmentParameters'),
        ),
        migrations.AddField(
            model_name='experiments',
            name='actual_participants_legacy',
            field=models.IntegerField(default=1, null=True),
        ),
        migrations.AddField(
            model_name='experiments',
            name='registration_cutoff_legacy',
            field=models.IntegerField(default=1, null=True),
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='actual_participants',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='allow_multiple_participations',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='experience_constraint',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='experience_max',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='experience_min',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='experiments_exclude',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='experiments_exclude_all',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='experiments_include',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='experiments_include_all',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='gender',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='institutions_exclude',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='institutions_exclude_all',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='institutions_include',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='institutions_include_all',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='registration_cutoff',
        ),
        migrations.RemoveField(
            model_name='experiment_sessions',
            name='subject_type',
        ),
        migrations.AddField(
            model_name='experiment_sessions',
            name='recruitment_params',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.recruitmentParameters'),
        ),
        migrations.AddField(
            model_name='parameters',
            name='noShowCutoff',
            field=models.IntegerField(default=3),
        ),
        migrations.AddField(
            model_name='parameters',
            name='noShowCutoffWindow',
            field=models.IntegerField(default=90),
        ),
        migrations.AlterField(
            model_name='profile',
            name='blackballed',
            field=models.BooleanField(default=False, verbose_name='Blackballed'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='chapmanID',
            field=models.CharField(default='00000000', max_length=100, verbose_name='ID Number'),
        ),
        migrations.RenameField(
            model_name='profile',
            old_name='emailConfirmed',
            new_name='email_confirmed',
        ),
        migrations.AlterField(
            model_name='profile',
            name='email_confirmed',
            field=models.CharField(default='no', max_length=100, verbose_name='Email Confirmed'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='gender',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.genders', verbose_name='Gender'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='major',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.majors', verbose_name='Major'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='phone',
            field=models.CharField(default='', max_length=100, verbose_name='Phone Number'),
        ),
        migrations.RenameField(
            model_name='profile',
            old_name='school',
            new_name='school',
        ),
        migrations.AlterField(
            model_name='profile',
            name='school',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.schools', verbose_name='School'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='studentWorker',
            field=models.BooleanField(default=False, verbose_name='Student Woker'),
        ),
        migrations.RenameField(
            model_name='profile',
            old_name='subjectType',
            new_name='subject_type',
        ),
        migrations.AlterField(
            model_name='profile',
            name='subject_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.subject_types', verbose_name='Subject Type'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='type',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='main.accountTypes', verbose_name='Account Type'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AlterField(
            model_name='experiments',
            name='notes',
            field=models.TextField(default=''),
        ),
        migrations.CreateModel(
            name='email_filters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=300, verbose_name='Domain, ex: abc.edu')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='Chapman', max_length=300, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Email Filter',
                'verbose_name_plural': 'Email Filters',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='email_filter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.email_filters', verbose_name='Email Filter'),
        ),
        migrations.AddField(
            model_name='schools',
            name='email_filter',
            field=models.ManyToManyField(blank=True, to='main.email_filters', verbose_name='Email Filters'),
        ),
        migrations.AlterField(
            model_name='schools',
            name='name',
            field=models.CharField(max_length=300, verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='recruitmentparameters',
            name='schools_exclude',
            field=models.ManyToManyField(blank=True, related_name='recruitmentparameters_schools_exclude', to='main.schools'),
        ),
        migrations.AddField(
            model_name='recruitmentparameters',
            name='schools_exclude_constraint',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='recruitmentparameters',
            name='schools_include',
            field=models.ManyToManyField(blank=True, related_name='recruitmentparameters_schools_include', to='main.schools'),
        ),
        migrations.AddField(
            model_name='recruitmentparameters',
            name='schools_include_constraint',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='recruitmentparameters',
            name='actual_participants',
            field=models.IntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='recruitmentparameters',
            name='experience_constraint',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='recruitmentparameters',
            name='experiments_exclude_all',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='recruitmentparameters',
            name='experiments_include_all',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='recruitmentparameters',
            name='institutions_exclude_all',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='recruitmentparameters',
            name='institutions_include_all',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='recruitmentparameters',
            name='registration_cutoff',
            field=models.IntegerField(default=1),
        ),
        migrations.CreateModel(
            name='profile_note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('my_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.profile')),
                ('noteMaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('timestamp', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Profile Note',
                'verbose_name_plural': 'Profile Notes',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='paused',
            field=models.BooleanField(default=False, verbose_name='Paused'),
        ),
        migrations.AlterField(
            model_name='experiments',
            name='experiment_manager',
            field=models.CharField(default='***Manager Here***', max_length=300),
        ),
        migrations.AlterField(
            model_name='experiments',
            name='length_default',
            field=models.IntegerField(default=60),
        ),
        migrations.AlterField(
            model_name='experiments',
            name='title',
            field=models.CharField(default='***New Experiment***', max_length=300),
        ),
        migrations.AddField(
            model_name='profile',
            name='nonresidentAlien',
            field=models.BooleanField(default=False, verbose_name='Nonresident Alien'),
        ),
        migrations.AddField(
            model_name='profile',
            name='w9Collected',
            field=models.BooleanField(default=False, verbose_name='W9 Form Collected'),
        ),
        migrations.AddField(
            model_name='parameters',
            name='maxAnnualEarnings',
            field=models.DecimalField(decimal_places=2, default=600, max_digits=5),
        ),
        migrations.AddField(
            model_name='experiment_session_days',
            name='date_end',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='experiment_session_day_users',
            name='addedByUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='experiment_session_day_users',
            name='manuallyAdded',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='genders',
            name='initialValue',
            field=models.BooleanField(default=True, verbose_name='Default to On'),
        ),
        migrations.AlterField(
            model_name='genders',
            name='name',
            field=models.CharField(max_length=300, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='subject_types',
            name='name',
            field=models.CharField(max_length=300, verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='subject_types',
            name='initialValue',
            field=models.BooleanField(default=False, verbose_name='Default to On'),
        ),
        migrations.AddField(
            model_name='parameters',
            name='reminderTextSubject',
            field=models.CharField(default='', max_length=1000),
        ),
        migrations.AddField(
            model_name='parameters',
            name='deactivationText',
            field=models.CharField(default='', max_length=10000),
        ),
        migrations.AddField(
            model_name='parameters',
            name='deactivationTextSubject',
            field=models.CharField(default='', max_length=1000),
        ),
        migrations.AddField(
            model_name='parameters',
            name='reminderText',
            field=models.CharField(default='', max_length=10000),
        ),
        migrations.AddField(
            model_name='experiments',
            name='reminderText',
            field=models.CharField(default='', max_length=10000),
        ),
        migrations.AddField(
            model_name='experiment_session_days',
            name='reminderEmailSent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='parameters',
            name='siteURL',
            field=models.CharField(default='https://www.google.com/', max_length=200),
        ),
        migrations.CreateModel(
            name='recruitment_parameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_participants', models.IntegerField(default=1)),
                ('registration_cutoff', models.IntegerField(default=1)),
                ('experience_min', models.IntegerField(default=0, null=True)),
                ('experience_max', models.IntegerField(default=1000, null=True)),
                ('experience_constraint', models.BooleanField(default=False)),
                ('institutions_exclude_all', models.BooleanField(default=True)),
                ('institutions_include_all', models.BooleanField(default=True)),
                ('experiments_exclude_all', models.BooleanField(default=True)),
                ('experiments_include_all', models.BooleanField(default=True)),
                ('allow_multiple_participations', models.BooleanField(default=False, null=True)),
                ('schools_include_constraint', models.BooleanField(default=True)),
                ('schools_exclude_constraint', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('experiments_exclude', models.ManyToManyField(blank=True, related_name='recruitment_parameters_experiments_exclude', to='main.experiments')),
                ('experiments_include', models.ManyToManyField(blank=True, related_name='recruitment_parameters_experiments_include', to='main.experiments')),
                ('gender', models.ManyToManyField(to='main.genders')),
                ('institutions_exclude', models.ManyToManyField(blank=True, related_name='recruitment_parameters_institutions_exclude', to='main.institutions')),
                ('institutions_include', models.ManyToManyField(blank=True, related_name='recruitment_parameters_institutions_include', to='main.institutions')),
                ('schools_exclude', models.ManyToManyField(blank=True, related_name='recruitment_parameters_schools_exclude', to='main.schools')),
                ('schools_include', models.ManyToManyField(blank=True, related_name='recruitment_parameters_schools_include', to='main.schools')),
                ('subject_type', models.ManyToManyField(to='main.subject_types')),
            ],
            options={
                'verbose_name': 'Recruitment Parameters',
                'verbose_name_plural': 'Recruitment Parameters',
            },
        ),
        migrations.CreateModel(
            name='experiment_session_invitations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjectText', models.CharField(default='', max_length=1000)),
                ('messageText', models.CharField(default='', max_length=10000)),
                ('mailResultSentCount', models.IntegerField(default=0)),
                ('mailResultErrorText', models.CharField(default='', max_length=10000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('experiment_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.experiment_sessions')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('recruitment_params', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.recruitment_parameters')),
            ],
            options={
                'verbose_name': 'Experiment Session Invitations',
                'verbose_name_plural': 'Experiment Session Invitations',
            },
        ),
        migrations.AlterField(
            model_name='experiment_sessions',
            name='recruitment_params',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.recruitment_parameters'),
        ),
        migrations.AlterField(
            model_name='experiments',
            name='recruitment_params_default',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.recruitment_parameters'),
        ),
        migrations.DeleteModel(
            name='recruitmentParameters',
        ),
        migrations.RenameModel(
            old_name='accountTypes',
            new_name='account_types',
        ),
        migrations.AlterField(
            model_name='experiment_session_days',
            name='date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='schools',
            name='initialValue',
            field=models.BooleanField(default=False, verbose_name='Default to On'),
        ),
        migrations.AlterField(
            model_name='experiment_session_days',
            name='date',
            field=models.DateTimeField(),
        ),
        migrations.AlterField(
            model_name='experiment_session_days',
            name='date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
    ]
